service: afterwork-serverless

provider:
  name: aws
  runtime: nodejs4.3
  stage: dev 
  region: eu-west-1
  apiKeys:
    - afterwork-alert-key
    - ${opt:stage}-afterwork-key
    - ${env:APIKEY}

functions:
  afterworkLogin:
    handler: src/handlers/handler.afterworkLogin
    events:
      - http:
        path: login
        method: get
        cors: true
        request:
          template:
            application/json: >
            '{
              "uname": "$input.params(''uname'')",
              "pwd": "$input.params(''pwd'')"
            }'
    environment:
      APIKEY: ${opt:apiKeys}
  saveChecking:
    handler: src/handlers/handler.saveChecking
    events:
      - http:
        path: saveChecking
        method: post
        cors: true
        private: true
        request:
          template:
            application/json: >
            '{
              "uname" : "$input.params(''uname'')",
              "vid" : "$input.params(''vid'')",
              "vname" : "$input.params(''vname'')",
              "city" : "$input.params(''city'')"
            }'
  searchVenues:
    handler: src/handlers/handler.searchVenues
    events:
      - http:
        path: venues
        method: get
        cors: true
        private: true
        request:
          template:
            application/json: >
            '{
              "ll" : "$input.params(''ll'')"
            }'
    environment:
      CLIENT_ID: ${env:FOURSQUORECLIENDIT}
      CLIENT_SECRET: ${env:FOURSQUORECLIENDSECRET}
      RADIUS: ${env:RADIUS}

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
